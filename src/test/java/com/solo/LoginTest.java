package com.solo;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.solo.common.util.DateUtils;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.*;

/**
 * @Author gaojian
 * @Date 2018/10/22
 */
public class LoginTest {
    public static void main(String[] args) {
        /*Double a = 309.0;
        Double b = 318.0;
        BigDecimal bi1 = new BigDecimal("0.00");
        BigDecimal bi2 = new BigDecimal(b.toString());
        BigDecimal divide = bi1.divide(bi2, 2, RoundingMode.DOWN).multiply(new BigDecimal("10")).setScale(1);
        System.out.println(divide.toString());
        int i = bi1.compareTo(BigDecimal.ZERO);
        System.out.println(i);*/

        /*Double num = 0.33333;
        BigDecimal bigDecimal = new BigDecimal(num);
        System.out.println("1  "+bigDecimal.setScale(2,RoundingMode.UP));//不管后一位是多大，都向上+1
        System.out.println("2  "+bigDecimal.setScale(2,RoundingMode.HALF_UP));//四舍五入
        System.out.println("3  "+bigDecimal.setScale(2,RoundingMode.DOWN));
        System.out.println("4  "+bigDecimal.setScale(2,RoundingMode.HALF_DOWN));
        System.out.println("5  "+bigDecimal.setScale(2,RoundingMode.HALF_EVEN));
        System.out.println("6  "+bigDecimal.setScale(2,RoundingMode.CEILING));
        System.out.println("7  "+bigDecimal.setScale(2,RoundingMode.FLOOR));*/
//        System.out.println("8  "+bigDecimal.setScale(RoundingMode.UNNECESSARY));


        String eipSkuCode = "{MP2018001=257967759374565376, MP2018002=257967759668166656, HP2018002=257967759739469824, HP2018003=257967759835938816, HP2018004=257967759924019200, HS2018001=257967760003710976, HS2018002=257967760104374272, HS2018004=257967760179871744, HS2018005=257967760246980608, HS2018006=257967760309895168, HS2018008=257967760372809728, HS2018012=257967760456695808, HS2018013=257967760523804672, 187381504928649216=257967760582524928, 187382521787318272=257967760641245184, 189485647776452608=257967760699965440, MP2018003=257967760758685696, HS20180601=257967760804823040, HS20180602=257967760859348992, HS20180603=257967760922263552, HS20180604=257967760980983808, 195930011616686080=257967761039704064, 195974673488416768=257967761090035712, HS2018108=257967761127784448, HS2018116=257967761199087616, HS2018201=257967761257807872, HS2018202=257967761316528128, HS2018100=257967761371054080, HS2018113=257967761425580032, HP2018050=257967761484300288, HP2018051=257967761534631936, test20180626=257967761597546496, HS2018102=257967761635295232, HS2018105=257967761694015488, HS2018101=257967761752735744, HS2018106=257967761811456000, HP2018053=257967761865981952, HS2018115=257967761916313600, HS20180203=257967761966645248, HS2018110=257967762071502848, HS2018109=257967762121834496, HS2018112=257967762172166144, HS2018111=257967762251857920, HS2018103=257967762306383872, HS2018104=257967762356715520, HS2018118=257967762407047168, HS2018114=257967762461573120, HP2018052=257967762520293376, HS2018107=257967762570625024, HS2018117=257967762620956672, HS20181101=257967762671288320, lb0000001=257967762721619968, lb00000002=257967762755174400, lb0000003=257967762792923136, lb00002=257967762826477568, lb00003=257967762860032000, lb00004=257967762889392128, lb00005=257967762922946560, lb00006=257967762956500992, lb00007=257967762990055424, lb00008=257967763027804160, lb00009=257967763061358592, lb00010=257967763094913024, lb00011=257967763128467456, lb00012=257967763162021888, lb00013=257967763195576320, lb00014=257967763229130752, lb00015=257967763262685184, lb00016=257967763292045312, lb00017=257967763325599744, lb00018=257967763363348480, HS2018501=257967763401097216, HS2018503=257967763447234560, HS2018504=257967763497566208, HS2018507=257967763547897856, HS2018505=257967763594035200, HS2018508=257967763640172544, HS2018506=257967763690504192, HS2018509=257967763736641536, HS2018510=257967763786973184, 188500000001=257967763833110528, 123=257967763862470656, 11111111=257967763908608000, HNTK0137=257967763942162432, HNTK0106=257967763975716864, HNTK0130=257967764026048512, HNTK0126=257967764059602944, ACT001=257967764101545984, HNTK0121=257967764130906112, HNTK0138=257967764181237760, ACT002=257967764218986496, HNTK0127=257967764252540928, HNTK0128=257967764286095360, ACT003=257967764323844096, HNTK0131=257967764357398528, HNTK0144=257967764390952960, HNTK0129=257967764428701696, ACT004=257967764466450432, HNTK0107=257967764500004864, test123333=257967764550336512, ACT005=257967764583890944, HNTK0142=257967764613251072, HNTK0108=257967764646805504, HNTK0122=257967764692942848, HNTK0143=257967764726497280, ACT006=257967764760051712, HNTK0132=257967764793606144, ACT007=257967764827160576, HNTK0133=257967764860715008, HNTK0118=257967764898463744, HNTK0116=257967764932018176, ACT008=257967764965572608, HNTK0136=257967765003321344, HNTK0123=257967765045264384, HNTK0139=257967765078818816, HNTK0135=257967765112373248, HNTK0109=257967765154316288, ACT009=257967765200453632, HNTK0141=257967765229813760, HNTK0134=257967765263368192, HNTK0111=257967765292728320, ACT010=257967765338865664, HNTK0117=257967765372420096, HNTK0140=257967765405974528, HNTK0119=257967765439528960, HNTK0110=257967765468889088, 250698996769619968=257967765515026432, HNTK0145=257967765544386560, ACT011=257967765577940992, HNTK0112=257967765607301120, HNTK0094=257967765653438464, HNTK0114=257967765686992896, HNTK0146=257967765720547328, HNTK0113=257967765754101760, HNTK0092=257967765804433408, HNTK0124=257967765833793536, HNTK0095=257967765863153664, HNTK0091=257967765896708096, HNTK0125=257967765930262528, HNTK0147=257967765959622656, HNTK0148=257967765988982784, HNTK0149=257967766018342912, HNTK0101=257967766047703040, HNTK0098=257967766081257472, HNTK0104=257967766110617600, HNTK0102=257967766139977728, HNTK0105=257967766169337856, HNTK0100=257967766202892288, HNTK0120=257967766232252416, HNTK0097=257967766265806848, HNTK0103=257967766290972672, HNTK0099=257967766320332800, HNTK0096=257967766467133440, HNTK0093=257967766496493568, yq100001=257967766525853696, SK111111=257967766551019520}";
        String a= eipSkuCode.replace("{","");
        String b= a.replace("}","");
        String[] skus = b.split(",");
        for (int i = 0; i < skus.length; i++) {
            String skuCode = skus[i].split("=")[0].trim();
            String eipSku = skus[i].split("=")[1].trim();
            System.out.println("update `healthapp_healthbusiness`.`health_product` set eip_sku_code = '"
                    + eipSku + "' where sku_code = '" + skuCode + "';");
        }
        System.out.println(skus.length);

       /* String idCard = "510902199106130691";
        idCard = idCard.replaceAll("(\\d{8})\\d{6}(\\w{4})","$1******$2");
        System.out.println(idCard);
*/
        /*Integer seckillInventoryTotal  = 200;
        Double rate = 0.22;
        BigDecimal total = new BigDecimal(seckillInventoryTotal).multiply(new BigDecimal(rate))
                .add(new BigDecimal(seckillInventoryTotal)).setScale(0,RoundingMode.HALF_UP);
        System.out.println(total.intValue());*/


    }

    public static Date addMinute(Date date, Integer offset) {
        LocalDateTime beginDateTime = dateToLocaleDateTime(date);
        ZoneId zone = ZoneId.systemDefault();
        return Date.from(beginDateTime.minusMinutes(offset).atZone(zone).toInstant());
    }

    public static LocalDateTime dateToLocaleDateTime(Date date) {
        Instant instant = date.toInstant();
        ZoneId zoneId = ZoneId.systemDefault();
        return instant.atZone(zoneId).toLocalDateTime();
    }
}
